// Auto Generated, do not edit.
import type { Read } from "../../stream";
import * as ReadNBytesInt64 from "../../common/ReadNBytesInt64";
import * as Vector3F from "../../common/Vector3F";
export type PartyMemberData = {
  Auths: number;
  ZoneInstId: bigint;
  Unk2: number;
  Position: Vector3F.Vector3F;
  CharacterLevel: number;
  WorldId: number;
  Unk6: number;
  CharacterId: bigint;
  TransitIndex: number;
  Unk9: number;
  Unk10: number;
  Unk11: number;
  MaxHp: bigint;
  Unk13: number;
  ZoneId: number;
  Unk15: number;
  ClassId: number;
  CurHp: bigint;
  PartyMemberNumber: number;
  Name: string;
};
export function read(reader: Read) {
  const data = {} as PartyMemberData;
  data.Auths = reader.u8();
  data.ZoneInstId = reader.u64();
  data.Unk2 = reader.u8();
  data.Position = Vector3F.read(reader);
  data.CharacterLevel = reader.u16();
  data.WorldId = reader.u8();
  data.Unk6 = reader.u8();
  data.CharacterId = reader.u64();
  data.TransitIndex = reader.u32();
  data.Unk9 = reader.u8();
  data.Unk10 = reader.u16();
  data.Unk11 = reader.u8();
  data.MaxHp = ReadNBytesInt64.read(reader);
  data.Unk13 = reader.u32();
  data.ZoneId = reader.u32();
  data.Unk15 = reader.u8();
  data.ClassId = reader.u16();
  data.CurHp = ReadNBytesInt64.read(reader);
  data.PartyMemberNumber = reader.u8();
  data.Name = reader.string(20);
  return data;
}
